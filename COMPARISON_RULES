For the code-density comparisons to be valid, some rules need
to be enforced.  Otherwise thet results can be misleading.

LOGO
0.  Decoding LOGO: can be done in any way as long as standard
    LZSS read and proper output printed

LINE 1: Must be centered and printed
1.  UNAME syscall must be called
2.  U_SYSNAME ('Linux') from uname must be printed
3.  ' Version ' must be printed
4.  U_RELEASE must be printed
5.  ', Compiled' must be printed
6.  U_VERSION must be printed

LINE 2: Must be Centered and Printed
7.  /proc/cpuinfo (or equiv) must be loaded using open() and read()
    a 4096 buffer size can be assumed.
    No need to check error on open() or read().
    The file *must* be closed with close()
8.  Number of processors is detected via looking for a repeated 
    string in cpuinfo.
    One of "One" "Two" "Three" "Four" or "Many" must be printed based on
    this count.
9 . MHz is searched for (even if it won't be found)
10. The string 'MHz ' is printed
11. A chip name is found in cpuinfo
12. That is printed
13. ' Processor' is printed
14. If it was plural, an 's' is appended
15. sysinfo() is called
16. RAM is printed: S_TOTALRAM >> 20, rounded by adc
17. print 'M RAM,'
18. Get bogomips, print
19. Print bogomips

LINE 3: Must be centered and printed
20.  Print hostname from UNAME

exit()
21.  Must exit 0

find_string()
22. can use minimum of 3 bytes in string search

strcat()
23. must have strcat

center_and_print() 
24. center for 80 column display
25. use ansi escape code to center if possible
26. must check if > 80 and not center in that case
27. should round with adc if possible after divide

num_to_ascii()
28. should work for arbitrary 32-bit int
29. can use any method of /10 that works



                                1111111111|2|2|2|2|2222|22
Compliance:        |0|123456|7890123456789|0|1|2|3|4567|89
===================|=|======|=============|=|=|===|====|==
1.  ll.8051.s      | |      |             | | |   |    |
2.  ll.8086.s      |X|      |             | | |   |    |
3.  ll.alpha.s     |X|      |             | | |   |    |
4.  ll.arm.eabi.s  |X|      |             | | |   |    |
5.  ll.arm.oabi.s  |X|      |             | | |   |    |
6.  ll.avr32.s     |X|      |             | | |   |    |
7.  ll.crisv32.s   |X|      |             | | |   |    |
8.  ll.i386.s      |X|XXXXXX|XXXXXXXXXXXXX|X|X|XXX|XXXX|XX
9.  ll.ia64.s      |X|      |             | | |   |    |
10. ll.m68k.s      |X|      |             | | |   |    |
11. ll.m88k.s      |X|      |             | | |   |    |
12. ll.microblaze.s|X|      |             | | |   |    |
13. ll.mips16.s    |X|      |             | | |   |    |
14. ll.mips.s      |X|      |             | | |   |    |
15. ll.parisc.s    |X|      |             | | |   |    |
16. ll.pdp11.s     |X|      |             | | |   |    |
17. ll.ppc.s       |X|      |             | | |   |    |
18. ll.RiSC.s      |X|      |             | | |   |    |
19. ll.s390.s      |X|      |             | | |   |    |
20. ll.sh3.s       |X|      |             | | |   |    |
21. ll.sparc.s     |X|      |             | | |   |    |
22. ll.thumb2.s    |X|      |             | | |   |    |
23. ll.thumb.s     |X|      |             | | |   |    |
24. ll.vax.s       |X|      |             | | |   |    |
25. ll.x86_64.s    |X|      |             | | |   |    |
26. ll.z80.s       |X|      |             | | |   |    |
